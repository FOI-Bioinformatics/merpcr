name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  FORCE_COLOR: 1

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov psutil

    - name: Create test data
      run: |
        python -c "
        import os
        from pathlib import Path
        
        test_data_dir = Path('tests/data')
        test_data_dir.mkdir(exist_ok=True)
        
        sts_file = test_data_dir / 'test.sts'
        if not sts_file.exists():
            with open(sts_file, 'w') as f:
                f.write('AFM248yg9\\tGCTAAAAATACACGGATGG\\tTGCAAGACTGCGTCTC\\t193\\t(D17S932) Chr.17\\n')
                f.write('L78833\\tGAGGCAAAGCTCATGGAAGA\\tCAGGAAGGCCAGCCATTT\\t195\\tUniSTS:5690\\n')
        
        fa_file = test_data_dir / 'test.fa'
        if not fa_file.exists():
            with open(fa_file, 'w') as f:
                f.write('>test_sequence\\n')
                f.write('GCTAAAAATACACGGATGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\\n')
                f.write('NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN\\n')
                f.write('NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTGCAAGACTGCGTCTC\\n')
        "

    - name: Run full test suite
      run: |
        pytest -v --tb=short -m "not performance"

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  release:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Get version from tag
      id: get_version
      run: |
        echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## Changes in ${{ steps.get_version.outputs.version }}
          
          ### Features
          - See CHANGELOG.md for detailed changes
          
          ### Bugfixes
          - See CHANGELOG.md for detailed changes
          
          ### Installation
          ```bash
          pip install merpcr==${{ steps.get_version.outputs.version }}
          ```
          
          ### Verification
          This release has been tested on:
          - Python 3.11, 3.12, 3.13
          - Linux, macOS, Windows
          
          Full test results and coverage reports are available in the CI artifacts.
        files: |
          dist/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags/')
    environment: 
      name: pypi
      url: https://pypi.org/p/merpcr

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        packages_dir: dist/

  notify:
    runs-on: ubuntu-latest
    needs: [release, publish-pypi]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Get version from tag
      id: get_version
      run: |
        echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Notify success
      run: |
        echo "Successfully released merPCR ${{ steps.get_version.outputs.version }}"
        echo "PyPI: https://pypi.org/project/merpcr/${{ steps.get_version.outputs.version }}/"
        echo "GitHub: https://github.com/${{ github.repository }}/releases/tag/${{ steps.get_version.outputs.version }}"